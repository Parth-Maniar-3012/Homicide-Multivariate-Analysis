# ================================
# 4. Stratified Sampling
# ================================
set.seed(123)
solved <- df_clean %>% filter(Crime.Solved == "Yes") %>% sample_n(5000)
unsolved <- df_clean %>% filter(Crime.Solved == "No") %>% sample_n(5000)
# Apply cleaning rules
df_clean <- df %>%
filter(
!is.na(Victim.Age), !is.na(Perpetrator.Age),
Victim.Age > 0 & Victim.Age <= 110,
Perpetrator.Age > 0 & Perpetrator.Age <= 110,
Victim.Count >= 1,
Perpetrator.Count >= 1,
Weapon != "Unknown",
Relationship != "Unknown",
Victim.Sex %in% c("Male", "Female"),
Perpetrator.Sex %in% c("Male", "Female"),
Crime.Solved %in% c("Yes", "No")
)
# ================================
# 4. Stratified Sampling
# ================================
set.seed(123)
solved <- df_clean %>%
filter(Crime.Solved == "Yes") %>%
sample_n(size = min(n(), 5000))
unsolved <- df_clean %>%
filter(Crime.Solved == "No") %>%
sample_n(size = min(n(), 5000))
df_sample <- bind_rows(solved, unsolved)
# ================================
# 5. Select Relevant Columns
# ================================
df_sample <- df_sample %>%
select(
Crime.Solved, Year, State, Weapon, Relationship,
Victim.Sex, Victim.Age, Victim.Race,
Perpetrator.Sex, Perpetrator.Age, Perpetrator.Race,
Victim.Count, Perpetrator.Count
)
# ================================
# 6. Recode and Encode
# ================================
df_sample <- df_sample %>%
mutate(
Crime.Solved = ifelse(Crime.Solved == "Yes", 1, 0),
Victim.Age = as.numeric(Victim.Age),
Perpetrator.Age = as.numeric(Perpetrator.Age)
)
# Encode categorical variables
df_encoded <- dummy_cols(df_sample,
select_columns = c("State", "Weapon", "Relationship",
"Victim.Sex", "Victim.Race",
"Perpetrator.Sex", "Perpetrator.Race"),
remove_selected_columns = TRUE)
View(df_encoded)
View(df_clean)
# ================================
# 7. Optional: PCA
# ================================
df_pca <- df_encoded %>% select(where(is.numeric))
df_pca_scaled <- scale(df_pca)
pca_result <- prcomp(df_pca_scaled, center = TRUE, scale. = TRUE)
setwd("E:/Rowan DS/Summer-25/Project")
# ================================
# 1. Load Required Packages
# ================================
library(dplyr)
library(readr)
# ================================
# 2. Load Data
# ================================
# Replace with your actual path
df <- read_csv("database.csv")
# ================================
# 3. Convert Age Columns to Numeric
# ================================
df$Victim.Age <- as.numeric(df$Victim.Age)
# ================================
# 3. Convert Age Columns to Numeric
# ================================
df$Victim.Age <- as.numeric(df$Victim Age)
# ================================
# 3. Convert Age Columns to Numeric
# ================================
df$Victim.Age <- as.numeric(df$Victim.Age)
colnames(df)
# ================================
# 3. Convert Age Columns to Numeric
# ================================
df$`Victim Age` <- as.numeric(df$`Victim Age`)
df$`Perpetrator.Age` <- as.numeric(df$`Perpetrator.Age`)
# ================================
# 3. Convert Age Columns to Numeric
# ================================
df$`Victim Age` <- as.numeric(df$`Victim Age`)
df$`Perpetrator Age` <- as.numeric(df$`Perpetrator Age`)
# ================================
# 4. Clean the Data
# ================================
df_clean <- df %>%
# Remove invalid or missing ages
filter(
!is.na(Victim.Age) & !is.na(Perpetrator.Age),
Victim.Age > 0 & Victim.Age <= 110,
Perpetrator.Age > 0 & Perpetrator.Age <= 110
) %>%
# Remove zero counts
filter(
Victim.Count >= 1,
Perpetrator.Count >= 1
) %>%
# Remove "Unknown" or invalid values
filter(
Weapon != "Unknown",
Relationship != "Unknown",
Victim.Sex %in% c("Male", "Female"),
Perpetrator.Sex %in% c("Male", "Female"),
Crime.Solved %in% c("Yes", "No")
)
View(df)
# Load necessary packages
library(dplyr)
library(readr)
# Load the dataset
df <- read_csv("database.csv")
# Rename columns: clean up and use snake_case
df <- df %>%
rename(
record_id = `Record ID`,
agency_code = `Agency Code`,
agency_name = `Agency Name`,
agency_type = `Agency Type`,
city = City,
state = State,
year = Year,
month = Month,
incident = Incident,
crime_type = `Crime Type`,
crime_solved = `Crime Solved`,
victim_sex = `Victim Sex`,
victim_age = `Victim Age`,
victim_race = `Victim Race`,
victim_ethnicity = `Victim Ethnicity`,
perpetrator_sex = `Perpetrator Sex`,
perpetrator_age = `Perpetrator Age`,
perpetrator_race = `Perpetrator Race`,
perpetrator_ethnicity = `Perpetrator Ethnicity`,
relationship = Relationship,
weapon = Weapon,
victim_count = `Victim Count`,
perpetrator_count = `Perpetrator Count`,
record_source = `Record Source`
)
# View new column names
colnames(df)
# Convert age fields to numeric
df$victim_age <- as.numeric(df$victim_age)
df$perpetrator_age <- as.numeric(df$perpetrator_age)
# Clean the data
df_clean <- df %>%
filter(
!is.na(victim_age) & !is.na(perpetrator_age),
victim_age > 0 & victim_age <= 110,
perpetrator_age > 0 & perpetrator_age <= 110,
victim_count >= 1,
perpetrator_count >= 1,
weapon != "Unknown",
relationship != "Unknown",
victim_sex %in% c("Male", "Female"),
perpetrator_sex %in% c("Male", "Female"),
crime_solved %in% c("Yes", "No")
)
# Keep relevant columns
df_clean <- df_clean %>%
select(
record_id, year, state, crime_solved,
weapon, relationship,
victim_sex, victim_age, victim_race, victim_ethnicity,
perpetrator_sex, perpetrator_age, perpetrator_race, perpetrator_ethnicity,
victim_count, perpetrator_count
)
# View summary
summary(df_clean)
table(df_clean$crime_solved)
# Save cleaned and renamed data
write_csv(df_clean, "Homicide_Cleaned.csv")
View(df)
# ========================
# 1. Load packages
# ========================
library(dplyr)
library(fastDummies)
library(factoextra)
library(cluster)
# ========================
# 2. Load Cleaned Data
# ========================
df <- read_csv("Homicide_Cleaned.csv")
#2. Load Cleaned Data
# ========================
df <- read_csv("Homicide_Cleaned.csv")
# ========================
# 3. Select Variables for Clustering
# ========================
df_cluster <- df %>%
select(
victim_age, perpetrator_age,
victim_count, perpetrator_count,
weapon, relationship,
victim_sex, perpetrator_sex
)
# ========================
# 4. Convert categorical variables to dummies
# ========================
df_cluster <- dummy_cols(df_cluster,
select_columns = c("weapon", "relationship", "victim_sex", "perpetrator_sex"),
remove_selected_columns = TRUE)
# ========================
# 5. Scale numeric variables
# ========================
df_scaled <- scale(df_cluster)
# ========================
# 6. Determine optimal number of clusters (Elbow Method)
# ========================
fviz_nbclust(df_scaled, kmeans, method = "wss") +
labs(title = "Elbow Method for Optimal K")
# Try silhouette as well (optional)
fviz_nbclust(df_scaled, kmeans, method = "silhouette") +
labs(title = "Silhouette Method for Optimal K")
# ========================
# 7. Run K-Means Clustering (choose k = 3 or from elbow plot)
# ========================
set.seed(123)
kmeans_result <- kmeans(df_scaled, centers = 3, nstart = 25)
# Add cluster labels to original data
df$cluster <- as.factor(kmeans_result$cluster)
# Cluster plot by age
fviz_cluster(kmeans_result, data = df_scaled,
geom = "point", ellipse.type = "norm",
main = "K-Means Clustering of Homicide Cases")
# Try silhouette as well (optional)
fviz_nbclust(df_scaled, kmeans, method = "silhouette") +
labs(title = "Silhouette Method for Optimal K")
# ========================
# 7. Run K-Means Clustering (choose k = 3 or from elbow plot)
# ========================
set.seed(123)
kmeans_result <- kmeans(df_scaled, centers = 3, nstart = 25)
# Add cluster labels to original data
df$cluster <- as.factor(kmeans_result$cluster)
# Cluster plot by age
fviz_cluster(kmeans_result, data = df_scaled,
geom = "point", ellipse.type = "norm",
main = "K-Means Clustering of Homicide Cases")
# Basic scatter plot
library(ggplot2)
ggplot(df, aes(x = victim_age, y = perpetrator_age, color = cluster)) +
geom_point(alpha = 0.5) +
labs(title = "Clusters by Age", x = "Victim Age", y = "Perpetrator Age") +
theme_minimal()
df_clean %>%
group_by(cluster) %>%
summarise(
avg_victim_age = mean(victim_age),
avg_perp_age = mean(perpetrator_age),
solved_rate = mean(crime_solved == "Yes")
)
# Load packages
library(dplyr)
library(readr)
library(fastDummies)
library(ggplot2)
library(factoextra)
library(cluster)
library(caret)
library(psych)
# ------------------------
# 1. Load and Clean Data
# ------------------------
df <- read_csv("database.csv")
# Load packages
library(dplyr)
library(readr)
library(fastDummies)
library(ggplot2)
library(factoextra)
library(cluster)
library(caret)
library(psych)
# ------------------------
# 1. Load and Clean Data
# ------------------------
df <- read_csv("database.csv")
# Rename columns
df <- df %>%
rename(
record_id = `Record ID`,
crime_solved = `Crime Solved`,
weapon = Weapon,
relationship = Relationship,
victim_sex = `Victim Sex`,
victim_age = `Victim Age`,
victim_race = `Victim Race`,
victim_ethnicity = `Victim Ethnicity`,
perpetrator_sex = `Perpetrator Sex`,
perpetrator_age = `Perpetrator Age`,
perpetrator_race = `Perpetrator Race`,
perpetrator_ethnicity = `Perpetrator Ethnicity`,
victim_count = `Victim Count`,
perpetrator_count = `Perpetrator Count`,
year = Year,
state = State
)
# Convert age fields to numeric
df$victim_age <- as.numeric(df$victim_age)
df$perpetrator_age <- as.numeric(df$perpetrator_age)
# Clean data
df_clean <- df %>%
filter(
!is.na(victim_age) & victim_age > 0 & victim_age <= 110,
!is.na(perpetrator_age) & perpetrator_age > 0 & perpetrator_age <= 110,
victim_count >= 1,
perpetrator_count >= 1,
weapon != "Unknown",
relationship != "Unknown",
victim_sex %in% c("Male", "Female"),
perpetrator_sex %in% c("Male", "Female"),
crime_solved %in% c("Yes", "No")
)
# ------------------------
# 2. Clustering
# ------------------------
df_cluster <- df_clean %>%
select(victim_age, perpetrator_age, victim_count, perpetrator_count,
weapon, relationship, victim_sex, perpetrator_sex)
# Encode categoricals
df_cluster <- dummy_cols(df_cluster,
select_columns = c("weapon", "relationship", "victim_sex", "perpetrator_sex"),
remove_selected_columns = TRUE)
# Scale numeric features
df_scaled <- scale(df_cluster)
# Determine optimal K
fviz_nbclust(df_scaled, kmeans, method = "wss")
fviz_nbclust(df_scaled, kmeans, method = "silhouette")
# Apply k-means (K = 3 for now)
set.seed(123)
kmeans_result <- kmeans(df_scaled, centers = 3, nstart = 25)
df_clean$cluster <- as.factor(kmeans_result$cluster)
# Visualize clusters
fviz_cluster(kmeans_result, data = df_scaled)
# ------------------------
# 3. Profile Clusters
# ------------------------
df_clean %>%
group_by(cluster) %>%
summarise(
avg_victim_age = mean(victim_age),
avg_perp_age = mean(perpetrator_age),
solved_rate = mean(crime_solved == "Yes")
)
# ------------------------
# 4. Classification Model
# ------------------------
df_model <- df_clean %>%
mutate(crime_solved = ifelse(crime_solved == "Yes", 1, 0)) %>%
select(crime_solved, victim_age, perpetrator_age, victim_count, perpetrator_count, cluster)
df_model$cluster <- as.factor(df_model$cluster)
df_model$crime_solved <- as.factor(df_model$crime_solved)
# Train/Test split
set.seed(101)
train_idx <- createDataPartition(df_model$crime_solved, p = 0.7, list = FALSE)
train <- df_model[train_idx, ]
test <- df_model[-train_idx, ]
# Logistic regression
model <- glm(crime_solved ~ ., data = train, family = binomial)
summary(model)
# Prediction
yhat <- predict(model, test, type = "response")
yhat_class <- ifelse(yhat > 0.5, 1, 0)
confusionMatrix(as.factor(yhat_class), test$crime_solved)
# ------------------------
# 5. Chi-Square Tests
# ------------------------
chisq.test(table(df_clean$weapon, df_clean$victim_sex))
chisq.test(table(df_clean$relationship, df_clean$crime_solved))
# ------------------------
# 6. Optional: Factor Analysis
# ------------------------
df_fa <- df_clean %>%
select(victim_age, perpetrator_age, victim_count, perpetrator_count) %>%
scale()
fa_result <- fa(df_fa, nfactors = 2, rotate = "varimax")
print(fa_result)
fa.diagram(fa_result)
# Save cleaned and enriched dataset
write_csv(df_clean, "Homicide_Clustered.csv")
# ------------------------
# 6. Optional: Factor Analysis
# ------------------------
df_fa <- df_clean %>%
select(victim_age, perpetrator_age, victim_count, perpetrator_count) %>%
scale()
fa_result <- fa(df_fa, nfactors = 2, rotate = "varimax")
print(fa_result)
fa.diagram(fa_result)
# Save cleaned and enriched dataset
write_csv(df_clean, "Homicide_Clustered.csv")
# Load packages
library(dplyr)
library(readr)
library(fastDummies)
library(ggplot2)
library(factoextra)
library(cluster)
library(caret)
library(psych)
# ------------------------
# 1. Load and Clean Data
# ------------------------
df <- read_csv("database.csv")
# Rename columns
df <- df %>%
rename(
record_id = `Record ID`,
crime_solved = `Crime Solved`,
weapon = Weapon,
relationship = Relationship,
victim_sex = `Victim Sex`,
victim_age = `Victim Age`,
victim_race = `Victim Race`,
victim_ethnicity = `Victim Ethnicity`,
perpetrator_sex = `Perpetrator Sex`,
perpetrator_age = `Perpetrator Age`,
perpetrator_race = `Perpetrator Race`,
perpetrator_ethnicity = `Perpetrator Ethnicity`,
victim_count = `Victim Count`,
perpetrator_count = `Perpetrator Count`,
year = Year,
state = State
)
# Convert age fields to numeric
df$victim_age <- as.numeric(df$victim_age)
df$perpetrator_age <- as.numeric(df$perpetrator_age)
# Clean data
df_clean <- df %>%
filter(
!is.na(victim_age) & victim_age > 0 & victim_age <= 110,
!is.na(perpetrator_age) & perpetrator_age > 0 & perpetrator_age <= 110,
victim_count >= 1,
perpetrator_count >= 1,
weapon != "Unknown",
relationship != "Unknown",
victim_sex %in% c("Male", "Female"),
perpetrator_sex %in% c("Male", "Female"),
crime_solved %in% c("Yes", "No")
)
# Prepare data for PCA
df_pca_input <- df_clean %>%
select(victim_age, perpetrator_age, victim_count, perpetrator_count,
weapon, relationship, victim_sex, perpetrator_sex)
View(df_pca_input)
# Dummy code the categorical variables
df_pca_input <- dummy_cols(df_pca_input,
select_columns = c("weapon", "relationship", "victim_sex", "perpetrator_sex"),
remove_selected_columns = TRUE)
View(df_pca_input)
# Scale numeric data
df_pca_scaled <- scale(df_pca_input)
View(df_pca_scaled)
# Run PCA
pca_result <- prcomp(df_pca_scaled, center = TRUE, scale. = TRUE)
View(pca_result)
# Scree Plot
fviz_eig(pca_result, addlabels = TRUE, barfill = "skyblue")
# PCA Biplot
fviz_pca_biplot(pca_result, repel = TRUE,
col.var = "red", col.ind = "gray40",
title = "PCA Biplot: Homicide Features")
# Prepare data for PCA
df_pca_input <- df_clean %>%
select(victim_age, perpetrator_age, victim_count, perpetrator_count)
View(df_pca_input)
# Prepare data for PCA
df_pca_input <- df_clean %>%
select(victim_age, perpetrator_age, victim_count, perpetrator_count)
# Dummy code the categorical variables
df_pca_input <- dummy_cols(df_pca_input,
select_columns = c("weapon", "relationship", "victim_sex", "perpetrator_sex"),
remove_selected_columns = TRUE)
# Scale numeric data
df_pca_scaled <- scale(df_pca_input)
# Run PCA
pca_result <- prcomp(df_pca_scaled, center = TRUE, scale. = TRUE)
View(pca_result)
View(pca_result)
# Scree Plot
fviz_eig(pca_result, addlabels = TRUE, barfill = "skyblue")
# Load packages
library(dplyr)
library(readr)
library(fastDummies)
library(ggplot2)
library(factoextra)
library(cluster)
library(caret)
library(psych)
# ------------------------
# 1. Load and Clean Data
# ------------------------
df <- read_csv("database.csv")
